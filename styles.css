/* styles.css */

/* Properties for All  */
* {
    border: 1px solid black;
}

/* Set the default font family and remove body margin and padding */
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

/* Style the header with a blue background, white text, and padding */
header {
    background-color: #007bff;
    color: #fff;
    padding: 10px;
    text-align: center;
}

/* Style the main content area with padding */
main {
    padding: 20px;
}

/* Style the sections with margin, padding, border, and relative positioning */
section {
    margin: 20px 0; /* Adjust margin to create space between sections */
    border: 2px solid rgba(255, 0, 0, 0.5);
    position: relative; /* For positioning the button and content */
}

#slider-tabs {
    margin: 20px 20px;
    display:flex;
    flex-wrap: wrap;
    justify-content: space-between;
    padding: 0px;
}

.slider-content {
    padding: 10px;
}

#summary-overview {
    text-align: center;
}

.slider-button {
    height: 30px;
    padding: 10px;
    align-content: center;
}

.border-rounded {
    border-radius: 9999px;
}

.main-background-color {
    background-color: rgba(0, 0, 200, 0.25);
}

.button-background-color {
    background-color: rgba(50, 50, 207, 0.5);
}
.button-active-background-color {
    background-color: rgba(50, 50, 207, 0.5);
}

/* Initially hide the content of expandable sections */
.initially-hidden {
    display: none;
}

.content {
    display: none;
}

.expanded .initially-hidden{
    display: block;
}

/* Add styles for the header container */
.header-content {
    background-color: #007bff;
    color: #fff;
    padding: 10px;
    text-align: center;
    cursor: pointer; /* Add a pointer cursor to indicate interactivity */
}

.header-button {
    margin: 0;
    padding: 0;
    font-size: 24px;
    cursor: pointer;
    caret-color: transparent;
}

.button {
    cursor: pointer;
    caret-color: transparent;
}

.arrow {
    font-size: 16px; /* Adjust the size of the arrow */
    margin-left: 10px; /* Add spacing between the text and the arrow */
    display: inline-block;
    transition: transform 0.3s ease; /* Smooth transition for arrow rotation */
    transform: rotate(0deg); /* Default state: arrow points right */
}

.expandable.expanded .arrow {
    transform: rotate(90deg); /* Rotate the arrow to point down when expanded */
}